AFdata$R2[AFdata$R2000 > 90] <- 95
AFdata$R4<-AFdata$R4000
AFdata$R4[AFdata$R4000 > 90] <- 95
#At 8000Hz
AFdata$L8<-AFdata$L8000
AFdata$L8[AFdata$L8000 > 90] <- 95
AFdata$R8<-AFdata$R8000
AFdata$R8[AFdata$R8000 > 90] <- 95
#colnames(AFdata)[1000:1020]
#Moving forward, use "L5" --> "R8" instead of "L500"--> "R8000" because the new variables have the 95dB cutoff and 90NR replacements.
# Calculating PTA in each ear
#colnames(AFdata[,1000:1021])
AFdata$LPTA <- apply(AFdata[,1011:1014], 1, mean, na.rm=T)
AFdata$RPTA <- apply(AFdata[,1015:1018], 1, mean, na.rm=T)
AFdata$LPTA[is.nan(AFdata$LPTA)]  <- NA
AFdata$RPTA[is.nan(AFdata$RPTA)]  <- NA
#Now can calculate BEPTA (PTA in better ear)
AFdata$BEPTA<- ifelse((!is.na(AFdata$RPTA) & AFdata$RPTA <= AFdata$LPTA) | is.na(AFdata$LPTA),
AFdata$RPTA, AFdata$LPTA)
#To Check
#AFdata[c(1,2,257),c("RPTA", "LPTA", "BEPTA")]
#is.na(AFdata$BEPTA)
#AFdata[which(is.na(AFdata$RPTA)), c("RPTA", "LPTA", "BEPTA")]
#ASHA Standards: (0)Normal: -10-25; (1)Mild: 26-40; (2)Moderate: 41-55; (3)Moderately-Severe: 56-70; (4)Severe: 71-90; (5)Profound: >90
AFdata$HLdeg <- cut(AFdata$BEPTA,
breaks=c(-Inf, 25, 40, 55, 70, 90, Inf),
labels=c("0", "1", "2", "3", "4", "5"))
#just practicing dplyr
AFdata2<-tbl_df(AFdata)
deg2<-AFdata2$HLdeg
lut <- c("0" = "Normal", "1" ="Mild", "2" ="Moderate", "3" = "Moderately-Severe", "4" = "Severe", "5" = "Profound")
AFdata2$HLdegnom <- lut[deg2]
glimpse(AFdata2)
ggplot(data=AFdata, aes(x=HLdeg)) + geom_bar()
ggplot(data=AFdata, aes(x=q0046, y=BEPTA)) + geom_boxplot(aes(group=q0046)) + labs(title="Hearing loss by pathway", x="q0046", y="PTA in Better Hearing Ear")
#Creating first random sample of 250, named "samp1"
set.seed(44)
temp_samp1<- na.omit(sample(1:nrow(AFdata), 250))
samp1<-AFdata[temp_samp1, c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA")]
summary(samp1)
#did not include the q0030_00XX variables because they have no variance (see plot below)
ggplot(AFdata, aes(q0030_0015)) + geom_histogram()
#Omitting missing PTA and degree of hearing loss variables
usesamp1<- drop_na(samp1, c("BEPTA"))
summary(usesamp1)
ggplot(data=usesamp1, aes(x=BEPTA)) + geom_histogram()
#ggplot(data=temp_samp1, aes(x=HLdeg)) + geom_bar()
#Figure out how to get another sample of 250 that only includes people not in this one to compare
#Installing Amelia package for MI.
#Cite as James Honaker, Gary King, Matthew Blackwell (2011). Amelia II: A Program for Missing Data. Journal of Statistical Software, 45(7), 1-47. URL http://www.jstatsoft.org/v45/i07/.
#install.packages("Amelia")
#update.packages("Amelia")
library('Amelia')
require('Amelia')
summary(lm(BEPTA ~ q0002 + q0003 + q0005 + q0008 + q0010 + q0012 + q0013 + q0014 + q0032 + q0034 + q0036 + q0042 + q0046,
data = usesamp1)) #looking at a comparison between listwise deletion with regression vs. using amelia for imputation
imp1<- amelia(usesamp1, m=5, cs= "q0046", p2s=2)
summary(imp1)
hist(imp1$imputations[[4]]$q0002, col="grey", border="white")
hist(imp1$imputations[[4]]$q0003, col="grey", border="white")
hist(imp1$imputations[[4]]$q0046, col="grey", border="white")
imp2<- amelia(usesamp1, m=5, cs= "q0046", noms = c("q0014"))
summary(imp2)
plot(imp2, which.vars= 1:5)
#imputed values are in red, observed in black, non-missing are blue
#q0005 *marital status* is a bad predictor for this model. Also q0010--household income
plot(imp2, which.vars= 6:8)
#take out q0012 & 0013--do health benefits cover cost of hearing test/aids
plot(imp2, which.vars= 10:13)
#variable 9 (q0032) wouldn't run for some reason
usesamp1$q0032
#plot(imp2, 9,col=c("red", "black"), scaled=F, lwd=1)
#Not sure why this won't run... Has only one N/A and the count is the same as q0036... it's binary, but so are some of the other variables
cov(usesamp1)
#assessing covariances to improve model fit
samp2<-AFdata[temp_samp1, c("q0002", "q0003", "q0008", "q0010", "q0014", "q0034", "q0036", "q0042", "q0046", "BEPTA")]
summary(samp2)
usesamp2<- drop_na(samp2, c("BEPTA"))
summary(usesamp2)
imp3<- amelia(usesamp2, m=8, cs= "q0046", noms = c("q0014"))
summary(imp3)
plot(imp3, which.vars = 1:4)
plot(imp3, which.vars = 5:9)
overimpute(imp3, var = "q0010")
overimpute(imp3, var = "BEPTA") #Not too bad!
missmap(imp3) #plots missingness by observation
ggplot(AFdata, aes(q0002)) + geom_histogram() #dichotomous, so distribution can't be normal
ggplot(AFdata, aes(q0003)) + geom_histogram() #slightly right-skewed
ggplot(AFdata, aes(q0005)) + geom_histogram()
ggplot(AFdata, aes(q0008)) + geom_histogram() #Collapse and dichotomize? Remove completely due to non-representative nature of the in-person sample?
ggplot(AFdata, aes(q0010)) + geom_histogram()
ggplot(AFdata, aes(q0012)) + geom_histogram()
ggplot(AFdata, aes(q0013)) + geom_histogram() #dichotomize? bimodal distribution
ggplot(AFdata, aes(q0014)) + geom_histogram() #race question... very little variance
table(AFdata$q0014)
ggplot(AFdata, aes(q0032)) + geom_histogram()
ggplot(AFdata, aes(q0034)) + geom_histogram()
ggplot(AFdata, aes(q0036)) + geom_histogram()
ggplot(AFdata, aes(q0042)) + geom_histogram()
ggplot(AFdata, aes(q0046)) + geom_histogram()
overimpute(imp3, var = "BEPTA") #Not too bad!
ggplot(AFdata, aes(q0008)) + geom_histogram() #Collapse and dichotomize? Remove completely due to non-representative nature of the in-person sample?
AFdata<- read.csv("~/Desktop/Modeling Literature/AF_US_UNI_AllSubsSurvey+Audio_2.20.18.csv", header=T, na.strings="#NULL!")
#data import.
AFdata<- read.csv("~/Desktop/Modeling Literature/AF_US_UNI_AllSubsSurvey+Audio_2.20.18.csv", header=T, na.strings="#NULL!")
#head(AFdata)
#View(AFdata)
library("dplyr")
library("tidyr")
library("ggplot2")
library('caTools')
library("Hmisc")
abbrev.data<- AFdata[, c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA")]
abbrev.data <- subset(AFdata ,c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA")]
abbrev.data <- AFdata ["q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"]
abbrev.data <- subset(AFdata, select = "q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA")
abbrev.data <- subset(AFdata, select = c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
abbrev.data <- AFdata[, c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA")]
AFdata
abbrev.data <- select(AFdata , c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
AFdata$BEPTA
AFdata$q0036
# Calculating PTA in each ear
#colnames(AFdata[,1000:1021])
AFdata$LPTA <- apply(AFdata[,1011:1014], 1, mean, na.rm=T)
#issue with 90NR --> 95 change: the HHT doesn't measure other thresholds if 90NR at 1000Hz (first threshold tested). Should we set all thresholds to 95 or leave them missing? ---> SOLUTION: SET ALL >90 to 95
#Changing 90NR (aka 9999) and Conventional audio thresholds that are > 90 to 95
#Left Ear
AFdata$L5<-AFdata$L500
AFdata$L5[AFdata$L500 > 90] <- 95
AFdata$L1<-AFdata$L1000
AFdata$L1[AFdata$L1000 > 90] <- 95
AFdata$L2<-AFdata$L2000
AFdata$L2[AFdata$L2000 > 90] <- 95
AFdata$L4<-AFdata$L4000
AFdata$L4[AFdata$L4000 > 90] <- 95
#Right Ear
AFdata$R5<-AFdata$R500
AFdata$R5[AFdata$R500 > 90] <- 95
AFdata$R1<-AFdata$R1000
AFdata$R1[AFdata$R1000 > 90] <- 95
AFdata$R2<-AFdata$R2000
AFdata$R2[AFdata$R2000 > 90] <- 95
AFdata$R4<-AFdata$R4000
AFdata$R4[AFdata$R4000 > 90] <- 95
#At 8000Hz
AFdata$L8<-AFdata$L8000
AFdata$L8[AFdata$L8000 > 90] <- 95
AFdata$R8<-AFdata$R8000
AFdata$R8[AFdata$R8000 > 90] <- 95
# Creating PTA Values (L, R, & BE)
```{r}
# Calculating PTA in each ear
#colnames(AFdata[,1000:1021])
AFdata$LPTA <- apply(AFdata[,1011:1014], 1, mean, na.rm=T)
AFdata$RPTA <- apply(AFdata[,1015:1018], 1, mean, na.rm=T)
AFdata$LPTA[is.nan(AFdata$LPTA)]  <- NA
AFdata$RPTA[is.nan(AFdata$RPTA)]  <- NA
#Now can calculate BEPTA (PTA in better ear)
AFdata$BEPTA<- ifelse((!is.na(AFdata$RPTA) & AFdata$RPTA <= AFdata$LPTA) | is.na(AFdata$LPTA),
AFdata$RPTA, AFdata$LPTA)
#To Check
#AFdata[c(1,2,257),c("RPTA", "LPTA", "BEPTA")]
#is.na(AFdata$BEPTA)
#AFdata[which(is.na(AFdata$RPTA)), c("RPTA", "LPTA", "BEPTA")]
abbrev.data <- select(AFdata , c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
AFdata$q0036
AFdata$BEPTA
abbrev.data <- select(AFdata , c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
AFcorr1 <- rcorr(as.matrix(abbrev.data))
AFcorr1
#Manipulation (man) group has no missing PTA variables
set.seed(4)
samp.split1 <- sample.split(AFdata$q0001, SplitRatio = .5)
temp_mangroup <- subset(AFdata, samp.split1 == TRUE)
testgroup  <- subset(AFdata, samp.split1 == FALSE)
mangroup<-drop_na(temp_mangroup, c('BEPTA'))
dim(mangroup)
#is.na(mangroup$BEPTA)
is.na(mangroup$BEPTA)
#data import.
AFdata<- read.csv("~/Desktop/Modeling Literature/AF_US_UNI_AllSubsSurvey+Audio_2.20.18.csv", header=T, na.strings="#NULL!")
#head(AFdata)
#View(AFdata)
library("dplyr")
library("tidyr")
library("ggplot2")
library('caTools')
#issue with 90NR --> 95 change: the HHT doesn't measure other thresholds if 90NR at 1000Hz (first threshold tested). Should we set all thresholds to 95 or leave them missing? ---> SOLUTION: SET ALL >90 to 95
#Changing 90NR (aka 9999) and Conventional audio thresholds that are > 90 to 95
#Left Ear
AFdata$L5<-AFdata$L500
AFdata$L5[AFdata$L500 > 90] <- 95
AFdata$L1<-AFdata$L1000
AFdata$L1[AFdata$L1000 > 90] <- 95
AFdata$L2<-AFdata$L2000
AFdata$L2[AFdata$L2000 > 90] <- 95
AFdata$L4<-AFdata$L4000
AFdata$L4[AFdata$L4000 > 90] <- 95
#Right Ear
AFdata$R5<-AFdata$R500
AFdata$R5[AFdata$R500 > 90] <- 95
AFdata$R1<-AFdata$R1000
AFdata$R1[AFdata$R1000 > 90] <- 95
AFdata$R2<-AFdata$R2000
AFdata$R2[AFdata$R2000 > 90] <- 95
AFdata$R4<-AFdata$R4000
AFdata$R4[AFdata$R4000 > 90] <- 95
#At 8000Hz
AFdata$L8<-AFdata$L8000
AFdata$L8[AFdata$L8000 > 90] <- 95
AFdata$R8<-AFdata$R8000
AFdata$R8[AFdata$R8000 > 90] <- 95
#colnames(AFdata)[1000:1020]
#Moving forward, use "L5" --> "R8" instead of "L500"--> "R8000" because the new variables have the 95dB cutoff and 90NR replacements.
# Calculating PTA in each ear
#colnames(AFdata[,1000:1021])
AFdata$LPTA <- apply(AFdata[,1011:1014], 1, mean, na.rm=T)
AFdata$RPTA <- apply(AFdata[,1015:1018], 1, mean, na.rm=T)
AFdata$LPTA[is.nan(AFdata$LPTA)]  <- NA
AFdata$RPTA[is.nan(AFdata$RPTA)]  <- NA
#Now can calculate BEPTA (PTA in better ear)
AFdata$BEPTA<- ifelse((!is.na(AFdata$RPTA) & AFdata$RPTA <= AFdata$LPTA) | is.na(AFdata$LPTA),
AFdata$RPTA, AFdata$LPTA)
#To Check
#AFdata[c(1,2,257),c("RPTA", "LPTA", "BEPTA")]
#is.na(AFdata$BEPTA)
#AFdata[which(is.na(AFdata$RPTA)), c("RPTA", "LPTA", "BEPTA")]
#ASHA Standards: (0)Normal: -10-25; (1)Mild: 26-40; (2)Moderate: 41-55; (3)Moderately-Severe: 56-70; (4)Severe: 71-90; (5)Profound: >90
AFdata$HLdeg <- cut(AFdata$BEPTA,
breaks=c(-Inf, 25, 40, 55, 70, 90, Inf),
labels=c("0", "1", "2", "3", "4", "5"))
#just practicing dplyr
AFdata2<-tbl_df(AFdata)
deg2<-AFdata2$HLdeg
lut <- c("0" = "Normal", "1" ="Mild", "2" ="Moderate", "3" = "Moderately-Severe", "4" = "Severe", "5" = "Profound")
AFdata2$HLdegnom <- lut[deg2]
glimpse(AFdata2)
ggplot(data=AFdata, aes(x=HLdeg)) + geom_bar()
ggplot(data=AFdata, aes(x=q0046, y=BEPTA)) + geom_boxplot(aes(group=q0046)) + labs(title="Hearing loss by pathway", x="q0046", y="PTA in Better Hearing Ear")
#Creating first random sample of 250, named "samp1"
set.seed(44)
temp_samp1<- na.omit(sample(1:nrow(AFdata), 250))
samp1<-AFdata[temp_samp1, c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA")]
summary(samp1)
#did not include the q0030_00XX variables because they have no variance (see plot below)
ggplot(AFdata, aes(q0030_0015)) + geom_histogram()
#Omitting missing PTA and degree of hearing loss variables
usesamp1<- drop_na(samp1, c("BEPTA"))
summary(usesamp1)
ggplot(data=usesamp1, aes(x=BEPTA)) + geom_histogram()
#ggplot(data=temp_samp1, aes(x=HLdeg)) + geom_bar()
#Split samples here. MI Group has no missing PTA variables
set.seed(44)
samp.split1 <- sample.split(AFdata$q0001, SplitRatio = .5)
temp_migroup <- subset(AFdata, samp.split1 == TRUE)
testgroup  <- subset(AFdata, samp.split1 == FALSE)
migroup<-drop_na(temp_migroup, c('BEPTA'))
dim(migroup)
#is.na(migroup$BEPTA)
#Installing Amelia package for MI.
#Cite as James Honaker, Gary King, Matthew Blackwell (2011). Amelia II: A Program for Missing Data. Journal of Statistical Software, 45(7), 1-47. URL http://www.jstatsoft.org/v45/i07/.
#install.packages("Amelia")
#update.packages("Amelia")
library('Amelia')
require('Amelia')
summary(lm(BEPTA ~ q0002 + q0003 + q0005 + q0008 + q0010 + q0012 + q0013 + q0014 + q0032 + q0034 + q0036 + q0042 + q0046,
data = usesamp1)) #looking at a comparison between listwise deletion with regression vs. using amelia for imputation
imp1<- amelia(usesamp1, m=5, cs= "q0046", p2s=2)
summary(imp1)
hist(imp1$imputations[[4]]$q0002, col="grey", border="white")
hist(imp1$imputations[[4]]$q0003, col="grey", border="white")
hist(imp1$imputations[[4]]$q0046, col="grey", border="white")
imp2<- amelia(usesamp1, m=5, cs= "q0046", noms = c("q0014"))
summary(imp2)
plot(imp2, which.vars= 1:5)
#imputed values are in red, observed in black, non-missing are blue
#q0005 *marital status* is a bad predictor for this model. Also q0010--household income
plot(imp2, which.vars= 6:8)
#take out q0012 & 0013--do health benefits cover cost of hearing test/aids
plot(imp2, which.vars= 10:13)
#variable 9 (q0032) wouldn't run for some reason
usesamp1$q0032
#plot(imp2, 9,col=c("red", "black"), scaled=F, lwd=1)
#Not sure why this won't run... Has only one N/A and the count is the same as q0036... it's binary, but so are some of the other variables
cov(usesamp1)
#assessing covariances to improve model fit
samp2<-AFdata[temp_samp1, c("q0002", "q0003", "q0008", "q0010", "q0014", "q0034", "q0036", "q0042", "q0046", "BEPTA")]
summary(samp2)
usesamp2<- drop_na(samp2, c("BEPTA"))
summary(usesamp2)
imp3<- amelia(usesamp2, m=8, cs= "q0046", noms = c("q0014"))
summary(imp3)
plot(imp3, which.vars = 1:4)
plot(imp3, which.vars = 5:9)
overimpute(imp3, var = "q0010")
overimpute(imp3, var = "BEPTA") #Not too bad!
missmap(imp3) #plots missingness by observation
ggplot(AFdata, aes(q0002)) + geom_histogram() #dichotomous, so distribution can't be normal
ggplot(AFdata, aes(q0003)) + geom_histogram() #slightly right-skewed
ggplot(AFdata, aes(q0005)) + geom_histogram()
ggplot(AFdata, aes(q0008)) + geom_histogram() #Collapse and dichotomize? Remove completely due to non-representative nature of the in-person sample? Remove this
ggplot(AFdata, aes(q0010)) + geom_histogram()
ggplot(AFdata, aes(q0012)) + geom_histogram()
ggplot(AFdata, aes(q0013)) + geom_histogram() #dichotomize? bimodal distribution
ggplot(AFdata, aes(q0014)) + geom_histogram() #race question... very little variance. Dichotomize
table(AFdata$q0014)
ggplot(AFdata, aes(q0032)) + geom_histogram()
ggplot(AFdata, aes(q0034)) + geom_histogram()
ggplot(AFdata, aes(q0036)) + geom_histogram()
ggplot(AFdata, aes(q0042)) + geom_histogram()
ggplot(AFdata, aes(q0046)) + geom_histogram()
#Can't do the iterative model without missing values.
FSsamp1<-migroup[, c("q0010", "BEPTA")]
imp4<- amelia(FSsamp1, m=8)
summary(imp4)
overimpute(imp4, var = "BEPTA")
#Household income isn't a good predictor this time
FSsamp2<- migroup[,c("q0002", "q0003", "q0010", "BEPTA")]
imp5<- amelia(FSsamp2, m=8)
summary(imp5)
overimpute(imp5, var = "BEPTA")
#Adding age (q0002) and gender (q0003) made it a little better.
FSsamp3<- migroup[, c('q0002', 'q0003', 'q0010', 'q0013', 'BEPTA')]
imp6<- amelia(FSsamp3, m=8)
summary(imp6)
overimpute(imp6, var='BEPTA')
#Adding coverage for hearing tests makes model worse
FSsamp4<- migroup[,c('q0002', 'q0003', 'q0010', 'q0012', 'q0032', 'BEPTA')]
imp7<- amelia(FSsamp4, m=8)
summary(imp7)
overimpute(imp7, var='BEPTA')
#Now adding self-reported hearing loss (q0032). This helped a lot!
FSsamp5<- migroup[,c('q0002', 'q0003', 'q0010', 'q0012', 'q0032', 'q0034','BEPTA')]
imp8<- amelia(FSsamp5, m=8)
summary(imp8)
overimpute(imp8, var='BEPTA')
#Adding tinnitus (q0034)
FSsamp6<-migroup[,c('q0002', 'q0003', 'q0010', 'q0012', 'q0032', 'q0034', 'q0036','BEPTA')]
imp9<- amelia(FSsamp6, m=8)
summary(imp9)
overimpute(imp9, var='BEPTA')
#Adding history of occupational noise exposure
FSsamp7 <-migroup[,c('q0002', 'q0003', 'q0010', 'q0012', 'q0032', 'q0034', 'q0036','q0042','BEPTA')]
imp10<- amelia(FSsamp7, m=8)
summary(imp10)
overimpute(imp10, var='BEPTA')
#Adding another self-report of hearing loss
FSsamp8 <-migroup[,c('q0002', 'q0003', 'q0010', 'q0012', 'q0032', 'q0034', 'q0036','q0042','q0046', 'BEPTA')]
imp11<- amelia(FSsamp8, m=8)
summary(imp11)
overimpute(imp11, var='BEPTA')
#Now by q0046--pathway quesiton
#Now trying this again, but only adding the ones that seemed to best predict BEPTA
FSsamp9<- migroup[, c('q0002', 'q0003', 'q0032', 'q0034', 'q0036','q0042','q0046', 'BEPTA')]
imp12<- amelia(FSsamp9, m=8)
summary(imp12)
overimpute(imp12, var='BEPTA')
#Taking out tinnitus (q0034)
FSsamp10<- migroup[, c('q0002', 'q0003', 'q0032','q0036','q0042','q0046', 'BEPTA')]
imp13<- amelia(FSsamp10, m=8)
summary(imp13)
overimpute(imp13, var='BEPTA')
#Subjectively better without tinnitus question
#Taking out gender (q0002)
FSsamp11<- migroup[, c('q0003', 'q0032','q0036','q0042','q0046', 'BEPTA')]
imp14<- amelia(FSsamp11, m=8)
summary(imp14)
overimpute(imp14, var='BEPTA')
overimpute(imp13, var='BEPTA')
#Subjectively better WITH gender question
#Putting gender back in, taking out deaf or hearing difficulty question (q0032)
FSsamp12<- migroup[, c('q0002', 'q0003', 'q0036','q0042','q0046', 'BEPTA')]
imp15<- amelia(FSsamp12, m=8)
summary(imp15)
overimpute(imp15, var='BEPTA')
overimpute(imp13, var='BEPTA')
#Subjectively better WITH q0032
#Putting q0032 back in, taking out occupational noise exposure question (q0036)
FSsamp13<- migroup[, c('q0002', 'q0003', 'q0032', 'q0042','q0046', 'BEPTA')]
imp16<- amelia(FSsamp13, m=8)
summary(imp16)
overimpute(imp16, var='BEPTA')
overimpute(imp13, var='BEPTA')
#Hard to call... I think we should leave noise exposure in
#Putting q0036 back in, taking out do you have a hearing problem now (q0042)
FSsamp14<- migroup[, c('q0002', 'q0003', 'q0032', 'q0036','q0046', 'BEPTA')]
imp17<- amelia(FSsamp14, m=8)
summary(imp17)
overimpute(imp17, var='BEPTA')
overimpute(imp16, var='BEPTA') #suggests that we should DEF leave noise exposure in
overimpute(imp13, var='BEPTA')
#IMP17 is the best so far
#Leaving q0036 out, also taking out pathway question (q0046)
FSsamp15<- migroup[, c('q0002', 'q0003', 'q0032', 'q0036', 'BEPTA')]
imp18<- amelia(FSsamp15, m=8)
summary(imp15)
overimpute(imp17, var='BEPTA')
overimpute(imp13, var='BEPTA')
overimpute(imp18, var='BEPTA')
#Taking out q0046 made it MUCH worse! Def leave it in. IMP17 is the best based on this approach
testsamp1<- testgroup[,c('q0002', 'q0003', 'q0032', 'q0036','q0046', 'BEPTA')]
testimp1<- amelia(testsamp1, m=8) #Got a warning that some observations are completely missing and that they won't be included in final model
summary(testimp1)
overimpute(testimp1, var='BEPTA')
overimpute(imp17, var='BEPTA')
#This isn't nearly as good a fit.. Going to try adding in tinnitus
testsamp2<- testgroup[,c('q0002', 'q0003', 'q0032','q0034', 'q0036','q0046', 'BEPTA')]
testimp2<- amelia(testsamp2, m=8)
summary(testimp2)
overimpute(testimp2, var='BEPTA') #Much better!
overimpute(testimp1, var='BEPTA')
testsamp3<- testgroup[,c('q0032','q0034', 'q0036','q0046', 'BEPTA')]
testimp3<- amelia(testsamp3, m=8)
summary(testimp3)
overimpute(testimp3, var='BEPTA')
testsamp4<- testgroup[,c('q0002', 'q0032','q0034', 'q0036','q0046', 'BEPTA')]
testimp4<- amelia(testsamp4, m=8)
summary(testimp4)
overimpute(testimp4, var='BEPTA')
is.identical (migroup, mangroup)
identical(migroup, mangroup)
dim(mangroup)
mangroup1<- abbrev.data <- select(mangroup , c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
abbrev.data <- select(AFdata , c("q0001", "q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
AFcorr1 <- rcorr(as.matrix(abbrev.data))
abbrev.data <- select(AFdata , c("q0001", "q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
AFcorr1 <- rcorr(as.matrix(abbrev.data))
abbrev.data <- select(AFdata , c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
AFcorr1 <- rcorr(as.matrix(abbrev.data))
AFcorr1
#Variables significantly correlated with BEPTA include:
# q0002  q0003 q0008 q0012  q0013 q0032 q0042  q0046
#Ranked by magnitude of correlation
# q0046, q0032, q0042, q0003, q0013, q0012, q0002, q0008
man.group1 <- select(mangroup , c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
fs1<- lm(BEPTA~q0046, data=man.group1)
fs1
summary(fs1)
fs2<- lm(BEPTA ~ q0046 + q0032, data=man.group1)
summary(fs2)
dim(testgroup)
abbrev.data <- select(AFdata , c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0017", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
#data import.
AFdata<- read.csv("~/Desktop/Modeling Literature/AF_US_UNI_AllSubsSurvey+Audio_2.20.18.csv", header=T, na.strings="#NULL!")
#head(AFdata)
#View(AFdata)
library("dplyr")
library("tidyr")
library("ggplot2")
library('caTools')
library("Hmisc")
#issue with 90NR --> 95 change: the HHT doesn't measure other thresholds if 90NR at 1000Hz (first threshold tested). Should we set all thresholds to 95 or leave them missing? ---> SOLUTION: SET ALL >90 to 95
#Changing 90NR (aka 9999) and Conventional audio thresholds that are > 90 to 95
#Left Ear
AFdata$L5<-AFdata$L500
AFdata$L5[AFdata$L500 > 90] <- 95
AFdata$L1<-AFdata$L1000
AFdata$L1[AFdata$L1000 > 90] <- 95
AFdata$L2<-AFdata$L2000
AFdata$L2[AFdata$L2000 > 90] <- 95
AFdata$L4<-AFdata$L4000
AFdata$L4[AFdata$L4000 > 90] <- 95
#Right Ear
AFdata$R5<-AFdata$R500
AFdata$R5[AFdata$R500 > 90] <- 95
AFdata$R1<-AFdata$R1000
AFdata$R1[AFdata$R1000 > 90] <- 95
AFdata$R2<-AFdata$R2000
AFdata$R2[AFdata$R2000 > 90] <- 95
AFdata$R4<-AFdata$R4000
AFdata$R4[AFdata$R4000 > 90] <- 95
#At 8000Hz
AFdata$L8<-AFdata$L8000
AFdata$L8[AFdata$L8000 > 90] <- 95
AFdata$R8<-AFdata$R8000
AFdata$R8[AFdata$R8000 > 90] <- 95
# Calculating PTA in each ear
#colnames(AFdata[,1000:1021])
AFdata$LPTA <- apply(AFdata[,1011:1014], 1, mean, na.rm=T)
AFdata$RPTA <- apply(AFdata[,1015:1018], 1, mean, na.rm=T)
AFdata$LPTA[is.nan(AFdata$LPTA)]  <- NA
AFdata$RPTA[is.nan(AFdata$RPTA)]  <- NA
#Now can calculate BEPTA (PTA in better ear)
AFdata$BEPTA<- ifelse((!is.na(AFdata$RPTA) & AFdata$RPTA <= AFdata$LPTA) | is.na(AFdata$LPTA),
AFdata$RPTA, AFdata$LPTA)
#To Check
#AFdata[c(1,2,257),c("RPTA", "LPTA", "BEPTA")]
#is.na(AFdata$BEPTA)
#AFdata[which(is.na(AFdata$RPTA)), c("RPTA", "LPTA", "BEPTA")]
abbrev.data <- select(AFdata , c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0018", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
AFdata$q0018_0001
abbrev.data <- select(AFdata , c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0018_0001", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
AFcorr1 <- rcorr(as.matrix(abbrev.data))
AFcorr1
man.group1 <- select(mangroup , c("q0002", "q0003", "q0005", "q0008", "q0010", "q0012", "q0013", "q0014", "q0018_0001", "q0032", "q0034", "q0036", "q0042", "q0046", "BEPTA"))
fs1<- lm(BEPTA~q0046, data=man.group1)
summary(fs1)
fs2<- lm(BEPTA ~ q0046 + q0032, data=man.group1)
summary(fs2)
Afdata$q0020
AFdata$q0020
AFdata$q0020_0001
AF_AUS_data<- read.csv("C:/Users/cwbishop/Documents/dropbox/Dropbox/Work/UW BandBlab/Studies/eHearing/AF_AU_UNI_Survey+HT_12.13.17.csv", header=T, na.strings="#NULL!")
AF_CAN_data<- read.csv("C:/Users/cwbishop/Documents/dropbox/Dropbox/Work/UW BandBlab/Studies/eHearing/AF_CAN_InPerson_AllSubs_Survey+Audio_CLEAN_07.25.2018.csv", header=T, na.strings="#NULL!")
AF_AUS_data<- read.csv("C:/Users/cwbishop/Documents/dropbox/Dropbox/Work/UW BandBlab/Studies/eHearing/AF_AU_UNI_Survey+HT_12.13.17.csv", header=T, na.strings="#NULL!")
AF_CAN_data<- read.csv("C:/Users/cwbishop/Documents/dropbox/Dropbox/Work/UW BandBlab/Studies/eHearing/AF_CAN_InPerson_AllSubs_Survey+Audio_CLEAN_07.25.2018.csv", header=T, na.strings="#NULL!")
AF_UK_data<- read.csv("C:/Users/cwbishop/Documents/dropbox/Dropbox/Work/UW BandBlab/Studies/eHearing/AF_UK_InPerson_AllSurvey+AllAudios_CLEAN_7.26.18.csv", header=T, na.strings="#NULL!")
AF_AUS_data$hcat<- cut(AF_AUS_data$BEPTA,
breaks=c(-Inf, 25, 40, 55, Inf),
labels=c("1", "2", "3","4"))
AF_AUS_data$BEPTA
